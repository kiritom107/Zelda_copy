{
  "version": 3,
  "sources": ["../code/main.js"],
  "sourcesContent": ["// Adding game objects to screen\n\n// Start a kaboom game\nkaboom()\n\n// Load a sprite asset from \"sprites/bean.png\", with the name \"bean\"\nloadSprite(\"bean\", \"/sprites/bean.png\")\nloadSprite(\"ghosty\", \"/sprites/ghosty.png\")\n\n// A \"Game Object\" is the basic unit of entity in kaboom\n// Game objects are composed from components\n// Each component gives a game object certain capabilities\n\n// add() assembles a game object from a list of components and add to game, returns the reference of the game object\nconst player = add([\n\tsprite(\"bean\"),   // sprite() component makes it render as a sprite\n\tpos(120, 80),     // pos() component gives it position, also enables movement\n\trotate(0),        // rotate() component gives it rotation\n\torigin(\"center\"), // origin() component defines the pivot point (defaults to \"topleft\")\n])\n\n// .onUpdate() is a method on all game objects, it registers an event that runs every frame\nplayer.onUpdate(() => {\n\t// .angle is a property provided by rotate() component, here we're incrementing the angle by 120 degrees per second, dt() is the time elapsed since last frame in seconds\n\tplayer.angle += 120 * dt()\n})\n\n// Add multiple game objects\nfor (let i = 0; i < 3; i++) {\n\n\t// generate a random point on screen\n\t// width() and height() gives the game dimension\n\tconst x = rand(0, width())\n\tconst y = rand(0, height())\n\n\tadd([\n\t\tsprite(\"ghosty\"),\n\t\tpos(x, y),\n\t])\n\n}\n"],
  "mappings": ";;AAGA;AAGA,aAAW,QAAQ;AACnB,aAAW,UAAU;AAOrB,MAAM,SAAS,IAAI;AAAA,IAClB,OAAO;AAAA,IACP,IAAI,KAAK;AAAA,IACT,OAAO;AAAA,IACP,OAAO;AAAA;AAIR,SAAO,SAAS,MAAM;AAErB,WAAO,SAAS,MAAM;AAAA;AAIvB,WAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAI3B,UAAM,IAAI,KAAK,GAAG;AAClB,UAAM,IAAI,KAAK,GAAG;AAElB,QAAI;AAAA,MACH,OAAO;AAAA,MACP,IAAI,GAAG;AAAA;AAAA;",
  "names": []
}
